name: Check C# String Exercises

on:
  push:
    branches: [ main, student-submissions ]
  pull_request:
    branches: [ main ]

jobs:
  test-exercises:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
    
    - name: Test Exercise 1
      id: exercise1
      run: |
        echo "Testing Exercise 1..."
        cd Exercise1
        timeout 30s dotnet run > ../output1.txt 2>&1 || echo "Exercise 1 execution completed"
        cd ..
        python3 .github/scripts/test_exercise1.py
      continue-on-error: true
    
    - name: Test Exercise 2
      id: exercise2
      if: steps.exercise1.outcome == 'success'
      run: |
        echo "Testing Exercise 2..."
        cd Exercise2
        timeout 30s dotnet run > ../output2.txt 2>&1 || echo "Exercise 2 execution completed"
        cd ..
        python3 .github/scripts/test_exercise2.py
      continue-on-error: true
    
    - name: Test Exercise 3
      id: exercise3
      if: steps.exercise2.outcome == 'success'
      run: |
        echo "Testing Exercise 3..."
        cd Exercise3
        timeout 30s dotnet run > ../output3.txt 2>&1 || echo "Exercise 3 execution completed"
        cd ..
        python3 .github/scripts/test_exercise3.py
      continue-on-error: true
    
    - name: Test Exercise 4
      id: exercise4
      if: steps.exercise3.outcome == 'success'
      run: |
        echo "Testing Exercise 4..."
        cd Exercise4
        timeout 30s dotnet run > ../output4.txt 2>&1 || echo "Exercise 4 execution completed"
        cd ..
        python3 .github/scripts/test_exercise4.py
      continue-on-error: true
    
    - name: Test Exercise 5
      id: exercise5
      if: steps.exercise4.outcome == 'success'
      run: |
        echo "Testing Exercise 5..."
        cd Exercise5
        timeout 30s dotnet run > ../output5.txt 2>&1 || echo "Exercise 5 execution completed"
        cd ..
        python3 .github/scripts/test_exercise5.py
      continue-on-error: true
    
    - name: Generate Interactive HTML Report
      run: |
        python3 .github/scripts/generate_html_report.py \
          "${{ steps.exercise1.outcome }}" \
          "${{ steps.exercise2.outcome }}" \
          "${{ steps.exercise3.outcome }}" \
          "${{ steps.exercise4.outcome }}" \
          "${{ steps.exercise5.outcome }}"
    
    - name: Deploy Report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        publish_branch: gh-pages
        include_files: |
          progress_report.html
          output*.txt
        destination_dir: reports/${{ github.run_number }}
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.run_number }}
        path: |
          progress_report.html
          progress_report.md
          output*.txt
          exercise_status.txt
        retention-days: 30
    
    - name: Comment PR with Report Link
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && always()
      with:
        script: |
          const reportUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/reports/${{ github.run_number }}/progress_report.html`;
          
          const comment = `## 📊 Exercise Progress Report
          
          Your exercise submission has been automatically tested!
          
          **📈 [View Interactive Report](${reportUrl})**
          
          The report includes:
          - ✅ Overall progress summary
          - 🔍 Detailed test results for each exercise
          - 💡 Specific suggestions to fix issues
          - 📝 Your program output and source code
          - 🎯 Next steps to continue learning
          
          *Report generated on: ${new Date().toLocaleString()}*
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
